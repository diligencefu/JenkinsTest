name: Build and Submit to App Store
on:
  workflow_dispatch:
  push:
    branches:
      - main
            
env:
    PRODUCT_NAME: "JenkinsTest"
    XCWORKSPACE_NAME: "JenkinsTest"
    PROJSCHEME_NAME: "JenkinsTest"
    ARCHIVE_NAME: "JenkinsTest"
    PROVISIONING_PROFILE_NAME: "${{ secrets.PROVISIONING_PROFILE_BASE64 }}"
    
jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Apple Certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
            p12-file-base64: ${{ secrets.TRUSTY_CAR }}
            p12-password: ${{ secrets.TRUSTY_CAR_PSW }}

      - name: Install the provisioning profile
        run: |

            PP_PATH=$RUNNER_TEMP/$PROVISIONING_PROFILE_LOCAL_NAME.mobileprovision

            echo -n "$PROVISIONING_PROFILE_NAME" | base64 --decode --output $PP_PATH
            mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
            cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install dependencies
        run: |
          /usr/local/bin/pod install

      - name: Build resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -workspace $XCWORKSPACE_NAME.xcworkspace -scheme $PROJSCHEME_NAME -configuration Release
        
      - name: Archive
        run: xcodebuild archive -workspace $XCWORKSPACE_NAME.xcworkspace -scheme $PROJSCHEME_NAME -archivePath $ARCHIVE_NAME.xcarchive

      - name: Export IPA
        run: |
          xcodebuild -exportArchive -archivePath $ARCHIVE_NAME.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath "~/Downloads/$PROJSCHEME_NAME"
          PROVISIONING_PROFILE=${{ secrets.PROVISIONING_PROFILE_BASE64 }}

      - name: Upload to App Store
        run: |
            xcrun altool --upload-app -f "~/Downloads/$PROJSCHEME_NAME/$PRODUCT_NAME.ipa" -t ios -u diligencefu@sina.com -p kwby-cfyy-bchh-pawx

      - name: Get iOS project version and build number
        run: |
          cd JenkinsTest
          version=$(agvtool what-marketing-version -terse1)
          build=$(agvtool what-version -terse)
          echo "iOS project version: $version"
          echo "iOS project build number: $build"
          
          curl -X POST -H "Content-Type: application/json" -d '{"msg_type":"text","content":{"text":"${{env.PROJSCHEME_NAME}} had submitted Testflight!"}}' https://open.larksuite.com/open-apis/bot/v2/hook/f85c8bb2-b5ae-4726-b93c-f1cb29cf8d17
